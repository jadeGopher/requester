// Code generated by MockGen. DO NOT EDIT.
// Source: requester/getter (interfaces: HashGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHashGetter is a mock of HashGetter interface.
type MockHashGetter struct {
	ctrl     *gomock.Controller
	recorder *MockHashGetterMockRecorder
}

// MockHashGetterMockRecorder is the mock recorder for MockHashGetter.
type MockHashGetterMockRecorder struct {
	mock *MockHashGetter
}

// NewMockHashGetter creates a new mock instance.
func NewMockHashGetter(ctrl *gomock.Controller) *MockHashGetter {
	mock := &MockHashGetter{ctrl: ctrl}
	mock.recorder = &MockHashGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHashGetter) EXPECT() *MockHashGetterMockRecorder {
	return m.recorder
}

// GetResponseHash mocks base method.
func (m *MockHashGetter) GetResponseHash(arg0 context.Context, arg1 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResponseHash", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResponseHash indicates an expected call of GetResponseHash.
func (mr *MockHashGetterMockRecorder) GetResponseHash(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResponseHash", reflect.TypeOf((*MockHashGetter)(nil).GetResponseHash), arg0, arg1)
}
